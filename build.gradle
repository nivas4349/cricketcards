//buildscript {
//	ext {
//		springBootVersion = '2.1.5.RELEASE'
//	}
//	dependencies {
//		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//		// Sonar Dependency
//	}
//}


plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'java'
	id 'war'
}

apply plugin: 'io.spring.dependency-management'
//apply from: 'gradle/sonar.gradle'
//apply from: 'gradle/artifactory.gradle'
//apply from: 'gradle/integration-tests.gradle'
apply from: 'gradle/end-to-end-tests.gradle'

group = 'com.siva.cricketcards'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	//maven { url 'https://plugins.gradle.org/m2/' }
}

ext {
	set('springBootAdminVersion', "2.1.5")
	set('springCloudVersion', "Greenwich.SR1")
	//newRelicVersion ='4.3.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.boot:spring-boot-starter-web'
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	//	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
	compile 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-security'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.session:spring-session-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'
	//compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.6.1'
}


dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task setVersion {
	if ("$version" != 'unspecified') {
		version = "$version"
	} else {
		version = System.getenv('ARTIFACT_VERSION') ?: "1.1.0-LOCAL"
	}
}

ext {
	coverageExclusions = [
		'**Application*',
		'**/*Application*'
	]
	cmdb_ci = 'cricket-cards'
}

//bootJar {
//	baseName = 'cricket-cards'
//	version = "$version"
//}

build.dependsOn endToEndTest//, sonar